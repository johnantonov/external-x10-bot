services:
  PRODUCTION-X10-REDIS:
  # prod-x10-redis:
  # test-x10-redis:
    image: redis:latest
    container_name: ${REDIS_CONTAINER}
    ports:
      - "${REDISEXTERNALPORT}:6379"  
    volumes:
      - ${REDISVOL}:/data
    environment:
      - REDIS_CONTAINER=${REDIS_CONTAINER}
      - REDISEXTERNALPORT=${REDISEXTERNALPORT} 
      - REDISVOL=${REDISVOL}
    restart: always

  PRODUCTION-X10-APP:
  # prod-x10-app:
  # test-x10-app:
    build: .
    image: ${APP_CONTAINER}
    container_name: ${APP_CONTAINER}
    working_dir: /usr/src/app
    environment:
      - REDIS_HOST=${REDIS_CONTAINER}
      - REDIS_PORT=6379
      - PGHOST=${PGHOST}
      - PGUSER=${PGUSER}
      - PGNAME=${PGNAME}
      - PGPASS=${PGPASS}
      - PGPORT=5432
      - REPORT_SERVICE_HOST=${REPORT_SERVICE_HOST}
      - BASE_PORT=${BASE_PORT}
      - PGEXPORT=${PGEXTERNALPORT}
      - PG_CONTAINER=${PG_CONTAINER}
      - PORT=${BASE_PORT}
      - RS=${REPORT_SERVICE_HOST}
      - REDIS_CONTAINER=${REDIS_CONTAINER}
      - APP_CONTAINER=${APP_CONTAINER}
      - POSTGRESVOL=${POSTGRESVOL}
    depends_on:
        - PRODUCTION-X10-REDIS
        - PRODUCTION-X10-POSTGRES
        - PRODUCTION-X10-REPORTER
      # - prod-x10-redis   
      # - prod-x10-postgres 
      # - prod-x10-reporter
      # - test-x10-redis  # для тестового бота
      # - test-x10-postgres # для тестового бота
      # - test-x10-reporter # для тестового бота
    restart: always

  PRODUCTION-X10-POSTGRES:
  # prod-x10-postgres:
  # test-x10-postgres:
    image: postgres:15-alpine
    container_name: ${PG_CONTAINER}
    environment:
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASS}
      - POSTGRES_DB=${PGNAME}
      - PGEXPORT=${PGEXTERNALPORT}
      - PG_CONTAINER=${PG_CONTAINER}
      - POSTGRESVOL=${POSTGRESVOL}
    ports:
      - "${PGEXTERNALPORT}:5432"  
    volumes:
      - ${POSTGRESVOL}:/var/lib/postgresql/data
    restart: always

  PRODUCTION-X10-REPORTER:
  # prod-x10-reporter:
  # test-x10-reporter:
    build:
      context: .
      dockerfile: reportService.Dockerfile 
    image: ${REPORT_SERVICE_HOST}
    container_name: ${REPORT_SERVICE_HOST}
    ports:
      - "${BASE_PORT}:${BASE_PORT}"
    environment:
      - PORT=${BASE_PORT}
      - RS=${REPORT_SERVICE_HOST}
    restart: always

volumes:
  production_x10_redis_data:
  production_x10_postgres_data:
  # prod-x10_redis_data: 
  # prod-x10_postgres_data: 
  # x10-external-bot_redis_data: # для тестового бота
  # x10-external-bot_postgres_data:  # для тестового бота